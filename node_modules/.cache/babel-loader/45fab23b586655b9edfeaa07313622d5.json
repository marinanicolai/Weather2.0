{"ast":null,"code":"import _regeneratorRuntime from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marina/Public/Weather2.0/src/CurrentLocation/index.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Weather from \"../Weather/index\";\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nfunction error(err) {\n  console.warn(\"ERROR(\".concat(err.code, \"): \").concat(err.message));\n}\n\nvar CurrentLocation = /*#__PURE__*/function (_React$Component) {\n  _inherits(CurrentLocation, _React$Component);\n\n  function CurrentLocation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CurrentLocation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CurrentLocation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      weatherData: null\n    };\n\n    _this.success = function (pos) {\n      var crd = pos.coords;\n\n      _this.getWeather(crd.latitude, crd.longitude);\n    };\n\n    _this.getUserCoordinates = function () {\n      navigator.geolocation.getCurrentPosition(_this.success, error, options);\n    };\n\n    _this.getWeather = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lat, long) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat, \"&lon=\").concat(long, \"&units=imperial&appid=ea5774b2eb37139cdce8d3374ec2be7e\"));\n\n              case 3:\n                res = _context.sent;\n                data = res.data;\n\n                _this.setState({\n                  weatherData: data\n                });\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (_context.t0.request) {\n                  console.log(_context.t0);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(CurrentLocation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserCoordinates();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var weatherData = this.state.weatherData;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, weatherData && /*#__PURE__*/React.createElement(Weather, {\n        weatherData: weatherData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 30\n        }\n      }));\n    }\n  }]);\n\n  return CurrentLocation;\n}(React.Component);\n\nexport default CurrentLocation;","map":{"version":3,"sources":["/home/marina/Public/Weather2.0/src/CurrentLocation/index.js"],"names":["React","axios","Weather","options","enableHighAccuracy","timeout","maximumAge","error","err","console","warn","code","message","CurrentLocation","state","weatherData","success","pos","crd","coords","getWeather","latitude","longitude","getUserCoordinates","navigator","geolocation","getCurrentPosition","lat","long","res","data","setState","request","log","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,IAAIC,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,IADR;AAEZC,EAAAA,OAAO,EAAE,IAFG;AAGZC,EAAAA,UAAU,EAAE;AAHA,CAAd;;AAMA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClBC,EAAAA,OAAO,CAACC,IAAR,iBAAsBF,GAAG,CAACG,IAA1B,gBAAoCH,GAAG,CAACI,OAAxC;AACD;;IAEKC,e;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;UAGRC,O,GAAU,UAACC,GAAD,EAAS;AACjB,UAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;;AAEA,YAAKC,UAAL,CAAgBF,GAAG,CAACG,QAApB,EAA8BH,GAAG,CAACI,SAAlC;AACD,K;;UAEDC,kB,GAAqB,YAAM;AACzBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,MAAKV,OAA9C,EAAuDT,KAAvD,EAA8DJ,OAA9D;AACD,K;;UAEDiB,U;0EAAa,iBAAOO,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAES3B,KAAK,+DACkC0B,GADlC,kBAC6CC,IAD7C,4DAFd;;AAAA;AAEHC,gBAAAA,GAFG;AAKDC,gBAAAA,IALC,GAKQD,GALR,CAKDC,IALC;;AAMT,sBAAKC,QAAL,CAAc;AAAEhB,kBAAAA,WAAW,EAAEe;AAAf,iBAAd;;AANS;AAAA;;AAAA;AAAA;AAAA;;AAQT,oBAAI,YAAIE,OAAR,EAAiB;AACfvB,kBAAAA,OAAO,CAACwB,GAAR;AACD;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAcO;AAClB,WAAKV,kBAAL;AACD;;;6BACQ;AAAA,UACCR,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAGP,0BAAO,0CAAGA,WAAW,iBAAI,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAEA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CAAP;AACD;;;;EAnC2Bf,KAAK,CAACkC,S;;AAsCpC,eAAerB,eAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Weather from \"../Weather/index\";\n\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0,\n};\n\nfunction error(err) {\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\nclass CurrentLocation extends React.Component {\n  state = {\n    weatherData: null,\n  };\n  success = (pos) => {\n    var crd = pos.coords;\n\n    this.getWeather(crd.latitude, crd.longitude);\n  };\n\n  getUserCoordinates = () => {\n    navigator.geolocation.getCurrentPosition(this.success, error, options);\n  };\n\n  getWeather = async (lat, long) => {\n    try {\n      const res = await axios(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=imperial&appid=ea5774b2eb37139cdce8d3374ec2be7e`\n      );\n      const { data } = res;\n      this.setState({ weatherData: data });\n    } catch (err) {\n      if (err.request) {\n        console.log(err);\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.getUserCoordinates();\n  }\n  render() {\n    const { weatherData } = this.state;\n\n    return <>{weatherData && <Weather weatherData={weatherData} />}</>;\n  }\n}\n\nexport default CurrentLocation;\n"]},"metadata":{},"sourceType":"module"}