{"ast":null,"code":"import _objectSpread from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marina/Public/Weather2.0/src/ChangeLocation/index.js\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Locations from \"./Locations/index\";\nimport Location from \"./Location/index\";\nimport ChangeLocationNav from \"./ChangeLocationNav/index\";\n\nvar ChangeLocation = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChangeLocation, _React$Component);\n\n  function ChangeLocation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChangeLocation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChangeLocation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: []\n    };\n\n    _this.handleNewLocation = function (name) {\n      var locationName = name.toLowerCase();\n\n      if (_this.state.locations.includes(locationName)) {\n        return;\n      }\n\n      var updatedLocations = [].concat(_toConsumableArray(_this.state.locations), [locationName]);\n\n      _this.setState(_objectSpread({}, _this.state, {\n        locations: updatedLocations\n      }));\n    };\n\n    _this.handleCilck = function () {\n      _this.setState({\n        locations: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangeLocation, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChangeLocationNav, {\n        handleNewLocation: this.handleNewLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Locations, {\n        locations: this.state.locations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), this.state.locations.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleCilck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/changeLocation/locations/:locationName\",\n        component: Location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ChangeLocation;\n}(React.Component);\n\nexport default ChangeLocation;","map":{"version":3,"sources":["/home/marina/Public/Weather2.0/src/ChangeLocation/index.js"],"names":["React","Route","Switch","Locations","Location","ChangeLocationNav","ChangeLocation","state","locations","handleNewLocation","name","locationName","toLowerCase","includes","updatedLocations","setState","handleCilck","length","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;IAEMC,c;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAIRC,iB,GAAoB,UAACC,IAAD,EAAU;AAC5B,UAAMC,YAAY,GAAGD,IAAI,CAACE,WAAL,EAArB;;AACA,UAAI,MAAKL,KAAL,CAAWC,SAAX,CAAqBK,QAArB,CAA8BF,YAA9B,CAAJ,EAAiD;AAC/C;AACD;;AACD,UAAMG,gBAAgB,gCAAO,MAAKP,KAAL,CAAWC,SAAlB,IAA6BG,YAA7B,EAAtB;;AACA,YAAKI,QAAL,mBAAmB,MAAKR,KAAxB;AAA+BC,QAAAA,SAAS,EAAEM;AAA1C;AACD,K;;UAEDE,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,K;;;;;;;6BAEQ;AACP,0BACE,uDACE,oBAAC,iBAAD;AAAmB,QAAA,iBAAiB,EAAE,KAAKC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKD,KAAL,CAAWC,SAAX,CAAqBS,MAArB,GAA8B,CAA9B,iBACC;AAAQ,QAAA,OAAO,EAAE,KAAKD,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,yCADP;AAEE,QAAA,SAAS,EAAEZ,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF;AAgBD;;;;EAnC0BJ,KAAK,CAACkB,S;;AAsCnC,eAAeZ,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Locations from \"./Locations/index\";\nimport Location from \"./Location/index\";\nimport ChangeLocationNav from \"./ChangeLocationNav/index\";\n\nclass ChangeLocation extends React.Component {\n  state = {\n    locations: [],\n  };\n\n  handleNewLocation = (name) => {\n    const locationName = name.toLowerCase();\n    if (this.state.locations.includes(locationName)) {\n      return;\n    }\n    const updatedLocations = [...this.state.locations, locationName];\n    this.setState({ ...this.state, locations: updatedLocations });\n  };\n\n  handleCilck = () => {\n    this.setState({ locations: [] });\n  };\n\n  render() {\n    return (\n      <>\n        <ChangeLocationNav handleNewLocation={this.handleNewLocation} />\n        <Locations locations={this.state.locations} />\n        {this.state.locations.length > 0 && (\n          <button onClick={this.handleCilck}>Reset</button>\n        )}\n\n        <Switch>\n          <Route\n            path=\"/changeLocation/locations/:locationName\"\n            component={Location}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default ChangeLocation;\n"]},"metadata":{},"sourceType":"module"}