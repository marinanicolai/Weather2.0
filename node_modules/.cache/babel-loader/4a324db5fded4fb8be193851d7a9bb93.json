{"ast":null,"code":"import _regeneratorRuntime from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marina/Public/Weather2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marina/Public/Weather2.0/src/ChangeLocation/Location/index.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Weather from \"../../Weather/index\";\n\nvar Location = /*#__PURE__*/function (_React$Component) {\n  _inherits(Location, _React$Component);\n\n  function Location() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Location)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      weatherData: null\n    };\n\n    _this.getWeatherInfo = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(location) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(location, \"&units=imperial&appid=ea5774b2eb37139cdce8d3374ec2be7e\"));\n\n              case 3:\n                result = _context.sent;\n\n                _this.setState({\n                  weatherData: result?.data\n                });\n\n                console.log(\"this is result\", result);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                window.alert(\"An error occured. Please enter valid location.\");\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var city = this.props.match.params.locationName;\n      this.getWeatherInfo(city);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var city = this.props.match.params.locationName;\n      console.log(\"city\", city);\n\n      if (prevProps.match.params?.locationName !== city) {\n        this.getWeatherInfo(city);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var weatherData = this.state.weatherData;\n      return /*#__PURE__*/React.createElement(Weather, {\n        weatherData: weatherData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Location;\n}(React.Component);\n\nexport default Location;","map":{"version":3,"sources":["/home/marina/Public/Weather2.0/src/ChangeLocation/Location/index.js"],"names":["React","axios","Weather","Location","state","weatherData","getWeatherInfo","location","result","setState","data","console","log","window","alert","city","props","match","params","locationName","prevProps","prevState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;IAEMC,Q;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;UAIRC,c;0EAAiB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEQN,KAAK,6DAC6BM,QAD7B,4DAFb;;AAAA;AAEPC,gBAAAA,MAFO;;AAKb,sBAAKC,QAAL,CAAc;AACZJ,kBAAAA,WAAW,EAAEG,MAAM,EAAEE;AADT,iBAAd;;AAGAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,MAA9B;AARa;AAAA;;AAAA;AAAA;AAAA;AAUbK,gBAAAA,MAAM,CAACC,KAAP,CAAa,gDAAb;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAcG;AAClB,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,YAArC;AACA,WAAKb,cAAL,CAAoBS,IAApB;AACD;;;uCAEkBK,S,EAAWC,S,EAAW;AACvC,UAAMN,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,YAArC;AAEAR,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,IAApB;;AAEA,UAAIK,SAAS,CAACH,KAAV,CAAgBC,MAAhB,EAAwBC,YAAxB,KAAyCJ,IAA7C,EAAmD;AACjD,aAAKT,cAAL,CAAoBS,IAApB;AACD;AACF;;;6BAEQ;AAAA,UACCV,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAEP,0BAAO,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAEA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EArCoBL,KAAK,CAACsB,S;;AAwC7B,eAAenB,QAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Weather from \"../../Weather/index\";\n\nclass Location extends React.Component {\n  state = {\n    weatherData: null,\n  };\n\n  getWeatherInfo = async (location) => {\n    try {\n      const result = await axios(\n        `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=ea5774b2eb37139cdce8d3374ec2be7e`\n      );\n      this.setState({\n        weatherData: result?.data,\n      });\n      console.log(\"this is result\", result);\n    } catch (err) {\n      window.alert(\"An error occured. Please enter valid location.\");\n    }\n  };\n\n  componentDidMount() {\n    const city = this.props.match.params.locationName;\n    this.getWeatherInfo(city);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const city = this.props.match.params.locationName;\n\n    console.log(\"city\", city);\n\n    if (prevProps.match.params?.locationName !== city) {\n      this.getWeatherInfo(city);\n    }\n  }\n\n  render() {\n    const { weatherData } = this.state;\n    return <Weather weatherData={weatherData} />;\n  }\n}\n\nexport default Location;\n"]},"metadata":{},"sourceType":"module"}